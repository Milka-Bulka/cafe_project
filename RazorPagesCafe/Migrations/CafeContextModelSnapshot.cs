// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RazorPagesCafe;

#nullable disable

namespace RazorPagesCafe.Migrations
{
    [DbContext(typeof(CafeContext))]
    partial class CafeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "place", new[] { "place" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "status" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "stop_list", new[] { "stop_list" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RazorPagesCafe.ContentsOfDish", b =>
                {
                    b.Property<int>("IdIngredient")
                        .HasColumnType("integer")
                        .HasColumnName("id_ingredient");

                    b.Property<int>("IdPosition")
                        .HasColumnType("integer")
                        .HasColumnName("id_position");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision")
                        .HasColumnName("quantity");

                    b.HasKey("IdIngredient", "IdPosition")
                        .HasName("contents_of_dish_pkey");

                    b.HasIndex("IdPosition");

                    b.ToTable("contents_of_dish", (string)null);
                });

            modelBuilder.Entity("RazorPagesCafe.ContentsOfOrder", b =>
                {
                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("comment");

                    b.Property<int>("IdOrder")
                        .HasColumnType("integer")
                        .HasColumnName("id_order");

                    b.Property<int>("IdPosition")
                        .HasColumnType("integer")
                        .HasColumnName("id_position");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdPosition");

                    b.ToTable("contents_of_order", (string)null);
                });

            modelBuilder.Entity("RazorPagesCafe.Dish", b =>
                {
                    b.Property<int>("IdPosition")
                        .HasColumnType("integer")
                        .HasColumnName("id_position");

                    b.Property<decimal>("Amount")
                        .HasPrecision(8, 2)
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<decimal>("Calories")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("calories");

                    b.Property<int>("CookingCourse")
                        .HasColumnType("integer")
                        .HasColumnName("cooking_course");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<string>("MenuView")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("menu_view");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<int>("QuantityInOrder")
                        .HasColumnType("integer")
                        .HasColumnName("quantity_in_order");

                    b.HasKey("IdPosition")
                        .HasName("dish_pkey");

                    b.HasIndex("MenuView");

                    b.ToTable("dish", (string)null);
                });

            modelBuilder.Entity("RazorPagesCafe.Ingredient", b =>
                {
                    b.Property<int>("IdIngredient")
                        .HasColumnType("integer")
                        .HasColumnName("id_ingredient");

                    b.Property<decimal>("Calories")
                        .HasPrecision(6, 2)
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("calories");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("name");

                    b.Property<int>("Remainder")
                        .HasColumnType("integer")
                        .HasColumnName("remainder");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("unit");

                    b.HasKey("IdIngredient")
                        .HasName("ingredient_pkey");

                    b.ToTable("ingredient", (string)null);
                });

            modelBuilder.Entity("RazorPagesCafe.Menu", b =>
                {
                    b.Property<string>("MenuView")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("menu_view");

                    b.Property<DateTime>("TimeOfAction")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("time_of_action");

                    b.HasKey("MenuView")
                        .HasName("menu_pkey");

                    b.ToTable("menu", (string)null);
                });

            modelBuilder.Entity("RazorPagesCafe.Orderr", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("integer")
                        .HasColumnName("id_order");

                    b.Property<int>("IdTable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_table");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTable"));

                    b.Property<int>("IdVisitor")
                        .HasColumnType("integer")
                        .HasColumnName("id_visitor");

                    b.Property<int>("NumberOfVisitor")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_visitor");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("order_time");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(8, 2)
                        .HasColumnType("money")
                        .HasColumnName("total_amount");

                    b.HasKey("IdOrder")
                        .HasName("orderr_pkey");

                    b.HasIndex("IdVisitor");

                    b.ToTable("orderr", (string)null);
                });

            modelBuilder.Entity("RazorPagesCafe.Visitor", b =>
                {
                    b.Property<int>("IdVisitor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_visitor");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVisitor"));

                    b.Property<int>("Bonuses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("bonuses");

                    b.Property<DateOnly>("DOfB")
                        .HasColumnType("date")
                        .HasColumnName("d_of_b");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("telephone");

                    b.HasKey("IdVisitor")
                        .HasName("visitor_pkey");

                    b.HasIndex(new[] { "Telephone" }, "unique_telephone")
                        .IsUnique();

                    b.ToTable("visitor", (string)null);
                });

            modelBuilder.Entity("RazorPagesCafe.ContentsOfDish", b =>
                {
                    b.HasOne("RazorPagesCafe.Ingredient", "IdIngredientNavigation")
                        .WithMany("ContentsOfDishes")
                        .HasForeignKey("IdIngredient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contents_of_dish_id_ingredient_fkey");

                    b.HasOne("RazorPagesCafe.Dish", "IdPositionNavigation")
                        .WithMany("ContentsOfDishes")
                        .HasForeignKey("IdPosition")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contents_of_dish_id_position_fkey");

                    b.Navigation("IdIngredientNavigation");

                    b.Navigation("IdPositionNavigation");
                });

            modelBuilder.Entity("RazorPagesCafe.ContentsOfOrder", b =>
                {
                    b.HasOne("RazorPagesCafe.Orderr", "IdOrderNavigation")
                        .WithMany()
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("contents_of_order_id_order_fkey");

                    b.HasOne("RazorPagesCafe.Dish", "IdPositionNavigation")
                        .WithMany()
                        .HasForeignKey("IdPosition")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("contents_of_order_id_position_fkey");

                    b.Navigation("IdOrderNavigation");

                    b.Navigation("IdPositionNavigation");
                });

            modelBuilder.Entity("RazorPagesCafe.Dish", b =>
                {
                    b.HasOne("RazorPagesCafe.Menu", "MenuViewNavigation")
                        .WithMany("Dishes")
                        .HasForeignKey("MenuView")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("dish_menu_view_fkey");

                    b.Navigation("MenuViewNavigation");
                });

            modelBuilder.Entity("RazorPagesCafe.Orderr", b =>
                {
                    b.HasOne("RazorPagesCafe.Visitor", "IdVisitorNavigation")
                        .WithMany("Orderrs")
                        .HasForeignKey("IdVisitor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("orderr_id_visitor_fkey");

                    b.Navigation("IdVisitorNavigation");
                });

            modelBuilder.Entity("RazorPagesCafe.Dish", b =>
                {
                    b.Navigation("ContentsOfDishes");
                });

            modelBuilder.Entity("RazorPagesCafe.Ingredient", b =>
                {
                    b.Navigation("ContentsOfDishes");
                });

            modelBuilder.Entity("RazorPagesCafe.Menu", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("RazorPagesCafe.Visitor", b =>
                {
                    b.Navigation("Orderrs");
                });
#pragma warning restore 612, 618
        }
    }
}
